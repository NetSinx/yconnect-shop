version: '3.9'

services:
  api-gateway:
    container_name: nginx-gateway
    image: nginx
    restart: on-failure
    pull_policy: if_not_present
    networks:
      - nginx-gateway
    ports:
      - 8000:80
    volumes:
      - D/"Dokumen Yasin"/"NetSinx Repository"/yconnect-shop/server/nginx.conf:/etc/nginx/nginx.conf:ro

  product-db:
    container_name: db-product
    image: mysql
    restart: on-failure
    pull_policy: if_not_present
    networks:
      - yconnect-net
    environment:
      MYSQL_ROOT_PASSWORD: "12345678"
      MYSQL_USER: "test"
      MYSQL_PASSWORD: "test123"
      MYSQL_DATABASE: "test_db"

  product:
    container_name: product-service
    image: product-img
    restart: on-failure
    pull_policy: if_not_present
    depends_on:
      - product-db
    networks:
      - yconnect-net
      - nginx-gateway
    environment:
      - DB_USER=test
      - DB_PASS=test123
      - DB_HOST=db-product
      - DB_PORT=3306
      - DB_DBNAME=test_db

  category-db:
    container_name: db-category
    image: mysql
    restart: on-failure
    pull_policy: if_not_present
    networks:
      - yconnect-net
    environment:
      MYSQL_ROOT_PASSWORD: "12345678"
      MYSQL_USER: "test"
      MYSQL_PASSWORD: "test123"
      MYSQL_DATABASE: "test_db"

  category:
    container_name: category-service
    image: category-img
    restart: on-failure
    pull_policy: if_not_present
    depends_on:
      - category-db
    networks:
      - yconnect-net
      - nginx-gateway
    environment:
      - DB_USER=test
      - DB_PASS=test123
      - DB_HOST=db-category
      - DB_PORT=3306
      - DB_DBNAME=test_db

  user-db:
    container_name: db-user
    image: mysql
    restart: on-failure
    pull_policy: if_not_present
    networks:
      - yconnect-net
    environment:
      MYSQL_ROOT_PASSWORD: "12345678"
      MYSQL_USER: "test"
      MYSQL_PASSWORD: "test123"
      MYSQL_DATABASE: "test_db"

  user:
    container_name: user-service
    image: user-img
    restart: on-failure
    pull_policy: if_not_present
    depends_on:
      - user-db
    networks:
      - yconnect-net
      - nginx-gateway
    environment:
      - DB_USER=test
      - DB_PASS=test123
      - DB_HOST=db-user
      - DB_PORT=3306
      - DB_DBNAME=test_db
  
  cart-db:
    container_name: db-cart
    image: mysql
    restart: on-failure
    pull_policy: if_not_present
    networks:
      - yconnect-net
    environment:
      MYSQL_ROOT_PASSWORD: "12345678"
      MYSQL_USER: "test"
      MYSQL_PASSWORD: "test123"
      MYSQL_DATABASE: "test_db"

  cart:
    container_name: cart-service
    image: cart-img
    restart: on-failure
    pull_policy: if_not_present
    depends_on:
      - cart-db
    networks:
      - yconnect-net
      - nginx-gateway
    environment:
      - DB_USER=test
      - DB_PASSWORD=test123
      - DB_HOST=db-cart
      - DB_PORT=3306
      - DB_DATABASE=test_db

  order-db:
    container_name: db-order
    image: mysql
    restart: on-failure
    pull_policy: if_not_present
    networks:
      - yconnect-net
    environment:
      MYSQL_ROOT_PASSWORD: "12345678"
      MYSQL_USER: "test"
      MYSQL_PASSWORD: "test123"
      MYSQL_DATABASE: "test_db"

  order:
    container_name: order-service
    image: order-img
    restart: on-failure
    pull_policy: if_not_present
    depends_on:
      - order-db
    networks:
      - yconnect-net
      - nginx-gateway
    environment:
      - DB_USER=test
      - DB_PASSWORD=test123
      - DB_HOST=db-order
      - DB_PORT=3306
      - DB_DATABASE=test_db
  
  mail:
    container_name: mail-service
    image: mail-img
    restart: on-failure
    pull_policy: if_not_present
    networks:
      - kong-network
      - nginx-gateway

  redis-service:
    container_name: redis-cache
    pull_policy: if_not_present
    image: redis
    networks:
      - yconnect-net
      - nginx-gateway
    volumes:
      - .\mail\myredis\config:/usr/local/etc/redis/
    command: redis-server /usr/local/etc/redis/redis.conf

networks:
  yconnect-net:
    external: true
  nginx-gateway:
    external: true